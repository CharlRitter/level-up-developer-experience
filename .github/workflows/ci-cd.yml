name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          # Install required CLI tools (similar to make setup but for CI)
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/

          curl -fsSL https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.sh | bash

          # Install k9s (optional for CI but good for consistency)
          curl -Lo ./k9s.tar.gz https://github.com/derailed/k9s/releases/download/v0.25.18/k9s_Linux_x86_64.tar.gz
          tar -xf ./k9s.tar.gz
          sudo mv ./k9s /usr/local/bin/

      - name: Set up environment
        run: |
          # Create Kubernetes cluster with Kind
          kind create cluster --name dev

          # Install application dependencies
          if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi

      - name: Tests placeholder
        run: |
          # This is where tests would run if the demo app had tests
          # For example: cd app && python manage.py test
          echo "No tests to run in this demo app"
          # Important: In a real project, the deploy-preview job should require this step to pass

      - name: Clean up
        if: always()
        run: kind delete cluster --name dev

  deploy-preview:
    if: github.event_name == 'pull_request'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          # Install required CLI tools
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/

          curl -fsSL https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.sh | bash

      - name: Deploy to cloud Kubernetes
        run: |
          # Authenticate with cloud provider (GCP, AWS, Azure)
          # gcloud auth activate-service-account --key-file=${{ secrets.GCP_KEY }}
          # gcloud container clusters get-credentials preview-cluster --zone us-central1-a

          # Deploy using kubectl or Helm
          kubectl apply -k overlays/preview

          # Get the public URL
          PREVIEW_URL=$(kubectl get ingress -n preview-${{ github.event.pull_request.number }} -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}')
          echo "Preview URL: http://$PREVIEW_URL"
          echo "::set-output name=preview_url::http://$PREVIEW_URL"

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Preview environment deployed! Access it at: ${{ steps.deploy.outputs.preview_url }}`
            })
